using AxWMPLib;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Windows.Forms;
using VOD.Lib;
using VOD.Lib.Models;

namespace VOD
{
    public partial class MainForm : Form
    {
        private User User { get; }
        private Danmaku Danmu { get; }
        private HttpClientEx HttpClient { get; }
        private const string BreakLine = "\r\n";
        private List<MusicModel> MusicList { get; }
        public MainForm()
        {
            InitializeComponent();

            MusicList = new List<MusicModel>();
            HttpClient = new HttpClientEx();
            User = new User(HttpClient);
            Danmu = new Danmaku(MusicList);
            Danmu.PlaySongEvt += Danmu_PlaySongEvt;
            Danmu.PrintEvt += Danmu_PrintEvt;
        }
        private void Danmu_PrintEvt(object sender, EventModel e)
        {
            printBox.Text += e.PrintMsg + BreakLine;
            printBox.ScrollToCaret();
            printBox.Focus();
            printBox.Select(printBox.TextLength, 0);
            printBox.ScrollToCaret();
        }
        private void MediaPlayer_PlayStateChange(object sender, _WMPOCXEvents_PlayStateChangeEvent e)
        {
            switch (e.newState)
            {
                case 0:
                case 1:
                case 2:
                    {
                        lock (MusicList)
                        {
                            Clear();
                            Play();
                            break;
                        }
                    }
            }
        }
        private void Clear()
        {
            var songId = Guid.Parse(mediaPlayer.Tag.ToString());
            var index = MusicList.FindIndex(x => x.SongId == songId);
            songList.Items.RemoveAt(index);
            MusicList.RemoveAt(index);
        }
        private void Danmu_PlaySongEvt(object sender, EventModel e)
        {
            lock (MusicList)
            {
                switch ((int)mediaPlayer.playState)
                {
                    case 0:
                    case 1:
                    case 2:
                        {
                            Play();
                            break;
                        }
                }
                ListViewItem lvi = new ListViewItem
                {
                    Tag = e.MusicInfo.SongId,
                    Text = string.Format("用户 {0} 点歌: {1}(歌手:{2})", e.SongChoser, e.MusicInfo.SongName, e.MusicInfo.Singer)
                };
                songList.Items.Add(lvi);
            }
        }
        private void Play()
        {
            var info = MusicList.FirstOrDefault();
            if (info != null)
            {
                var url = info.SongUrl;
                mediaPlayer.URL = url;
                mediaPlayer.Tag = info.SongId;
            }
        }
        private async void MainForm_Load(object sender, EventArgs e)
        {
            var result = await User.Login("user".GetConfig(), "passwd".GetConfig());
            if (result) await Danmu.ConnectAsync();
        }
        private void MainForm_FormClosing(object sender, FormClosingEventArgs e)
        {
            try
            {
                Danmu.Dispose();
                HttpClient.Dispose();
            }
            catch { }
        }

        private void mediaPlayer_PlayStateChange(object sender, _WMPOCXEvents_PlayStateChangeEvent e)
        {

        }
    }
}