using Microsoft.Win32;
using System;
using System.IO;
using System.Windows;
using VOD.Lib;
using VOD.Lib.Models;
using VOD.Wpf.Dialogs;

namespace VOD.Wpf
{
    public partial class MainWindow : Window
    {
        private User User { get; }
        private Danmaku Danmu { get; }
        private HttpClientEx HttpClient { get; }
        private const string BreakLine = "\r\n";
        private static object LockObj { get; } = new object();
        public MainWindow()
        {
            InitializeComponent();

            HttpClient = new HttpClientEx();
            User = new User(HttpClient);
            Danmu = new Danmaku();
            Danmu.PlaySongEvt += Danmu_PlaySongEvt;
            Danmu.PrintEvt += Danmu_PrintEvt;
        }
        private async void Window_Loaded(object sender, RoutedEventArgs e)
        {
            var result = await User.Login("user".GetConfig(), "passwd".GetConfig());
            if (result)
                await Danmu.ConnectAsync();
        }
        private void Window_Unloaded(object sender, RoutedEventArgs e)
        {
            try
            {
                Danmu.PrintEvt -= Danmu_PrintEvt;
                Danmu.PlaySongEvt -= Danmu_PlaySongEvt;
                Danmu.Dispose();
                HttpClient.Dispose();
            }
            catch { }
        }
        private void Danmu_PlaySongEvt(object sender, EventModel e)
        {
            lock (LockObj)
            {
                songList.Items.Add(e.MusicInfo);
                if (player.IsPaused())
                {
                    player.Source = new Uri(e.MusicInfo.SongUrl, UriKind.RelativeOrAbsolute);
                    player.Tag = e.MusicInfo.SongId;
                    player.Play();
                    btnState.Content = "暂停";
                }
            }
        }
        private void Danmu_PrintEvt(object sender, EventModel e)
        {
            int totalline = printBox.GetLineIndexFromCharacterIndex(printBox.Text.Length);
            if (totalline > 1000)
            {
                var length = printBox.GetLineLength(500);
                printBox.Text.Remove(0, length);
            }
            printBox.Text += e.PrintMsg + BreakLine;
            printBox.ScrollToLine(printBox.GetLineIndexFromCharacterIndex(printBox.SelectionStart));
            printBox.Focus();
            printBox.Select(printBox.Text.Length, 0);
            printBox.ScrollToLine(printBox.GetLineIndexFromCharacterIndex(printBox.SelectionStart));
        }
        private void btnState_Click(object sender, RoutedEventArgs e)
        {
            if (btnState.Content.ToString() == "播放")
            {
                player.Play();
                btnState.Content = "暂停";
            }
            else
            {
                player.Pause();
                btnState.Content = "播放";
            }
        }
        private void btnNext_Click(object sender, RoutedEventArgs e)
        {
            var songId = Guid.Parse(player.Tag.ToString());
            var item = songList.Items.Find(x => x.SongId == songId);
            if (item != null)
            {
                songList.Items.Remove(item);
                var next = songList.Items.Get(0);
                if (next != null)
                {
                    player.Source = new Uri(next.SongUrl, UriKind.RelativeOrAbsolute);
                    player.Tag = next.SongId;
                    player.Play();
                    btnState.Content = "暂停";
                }
                else
                {
                    player.Tag = "Pause";
                    btnState.Content = "播放";
                }
            }
        }
        private void btnOpen_Click(object sender, RoutedEventArgs e)
        {
            var openFileDialog = new OpenFileDialog() { Filter = "音乐文件(*.mp3)|*.mp3" };
            if (openFileDialog.ShowDialog() == true)
            {
                EventModel model = new EventModel
                {
                    MusicInfo = new MusicModel
                    {
                        SongChoser = "name".GetConfig(),
                        SongUrl = openFileDialog.FileName,
                        SongName = Path.GetFileNameWithoutExtension(openFileDialog.FileName),
                        SongId = Guid.NewGuid()
                    }
                };
                Danmu_PlaySongEvt(sender, model);
            }
        }
        private void AboutItem_Click(object sender, RoutedEventArgs e)
        {
            About about = new About();
            about.ShowDialog();
        }
        private void CancelItem_Click(object sender, RoutedEventArgs e)
        {
            Application.Current.Shutdown(0);
        }
        private void Setting_Click(object sender, RoutedEventArgs e)
        {
            Setting setting = new Setting();
            setting.ShowDialog();
        }
    }
}